GUI
    图形用户接口（界面）


图形界面的三个基本要素
    组件
        容器组件   : 容器组件里面，可以装其他的组件
        非容器组件 : 通常是按钮、滚动条、文本框等
    布局
        Java有非常先进的布局管理理念，其他编程语言往往比较单一。
        比如HTML使用CSS进行布局。
    事件
        处理用户的动作，包括鼠标事件、键盘事件、窗口事件……


Java整个图形界面的内容，都被放到 java.awt 包下面。

AWT : 抽象窗口工具集，没有使用Java来实现具体的绘图，而是调用系统底层的API绘图。性能比较好，但是不同的系统显示效果稍微有区别。
        只能使用所有系统都共有的共性，无法使用某个系统的特性。

Swing: 是一个纯Java的绘图实现，没有使用底层的API绘制特别的图形，而是全部自己实现绘图。
        Swing不是AWT的代替者，而是补充。
        使用Swing可以实现所有的系统显示相同的效果，并且所有系统体现出来的特效是一样的。
        在以前Swing因为是纯Java的，所以性能比较差；Java 5以后，没有性能的问题。

        实际的开发中，基本上都是结合AWT和Swing一起使用的。

        Swing的包是在 javax.swing 下面。


布局管理
    Frame默认使用 BorderLayout 布局。这个布局使用东西南北中，五个方向放组件。默认中间。
    Panel默认使用 FlowLayout 布局。

    BorderLayout  边界布局。
    FlowLayout    流布局，以指定的行高、行距放组件。如果一行放满了，会自动放下一行！
    GridLayout    表格布局，使用行、列的方式放置组件。组件占满一个格子。


事件
    事件的监听器，负责监听事件
        键盘监听器 : KeyListener
            
        鼠标监听器 : MouseListener
            mouseClicked  完成一次点击事件，双击也是mouseClicked事件。只是双击表示连续点击两次。
            mouseEntered  鼠标移动到某个组件上面。
            mouseExited   鼠标离开某个组件。
            mousePressed  鼠标按键按下。
            mouseReleased 鼠标按键松开

        窗口监听器 : WindowListener
    在监听器里面，有很多方法，只需要实现感兴趣的方法即可


    在AWT里面，所有的事件监听器，都有一个适配器。
    适配器是一个抽象类，这个抽象类实现了监听器接口里面所有的抽象方法。
    需要监听器的时候，通常就是继承适配器，重写感兴趣的方法即可。额外不感兴趣的方法不需要重写。
    这种被称之为“适配器模式”。
    通过一个适配器实现接口，适配器里面实现了所有的抽象方法，需要使用接口的时候不是new接口，而是new适配器，并且重写需要的方法。



使用AWT实现一个计算器
    确定界面
        1.界面的最上方，显示一个输入框
        2.在大部分的界面中，显示按钮。按钮包括
            0~9，小数点，数学运算符，等号，一共16个符号。
            16个正好是4乘以4矩形

    界面开发步骤
        1.开发了一个简单的窗口，固定大小，并且屏幕居中。
        2.添加所有需要的组件
        3.修改合适的布局，并且调整组件的位置。
        4.处理事件















