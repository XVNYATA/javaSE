IO流：java.io 

    
    I ：input  输入
    O : output 输出

    代码程序或者操作的文件必须加载到内存中才可以执行。
			
    输入：java将文件读入到内存中称为输入 
    输出：java将数据输出到其他地方(磁盘,网络介质,等)称为输出
      
      输入输出是以内存为基准

File文件 ： 
    
    java是一个面向对象的语言,java是自带了一个File类来表示文件 。
    
    包是公司域名的倒写 ：http://www.fkjava.org org.fkjava.项目名
    
    File file = new File("文件的路径");// 将对应文件路径的文件转换成java文件对象
                                        //通过java的文件对象file就可以获取文件的信息以及操作文件

    对于操作系统而言：文件和文件夹都是一个文件对象
    文件路径对应的文件类型可以是：       文件路径，文件夹路径
    文件路径按照文件路径的类型可以分为：  绝对路径和相对路径 
        --- 绝对路径：就是一直指向确定盘的路径：例如D:/fkjava/a.txt
	--- 相对路径：是当前文件相对的路径 ：例如 ：src/org/fkjava/fileTest/abc.txt 相对于项目路径的 也就是 项目的安装路径+src/org/fkjava/fileTest/abc.txt

    a.文件夹的遍历 
     
    b.搜索某个文件夹下面所有的文件 

    c.搜索某个文件夹下面特定的文件 

    d.文件过滤 ：搜索某个文件夹下面特定的文件

IO流的分类
       
       1.按照流的方向 
         输入流： 以内存为基准，文件内容流入到内存中就是输入流
	 输出流： 内存中的数据，输出道磁盘文件等介质就是输出流

       2.按照流的数据内容进行分类：
           字节流：流中是一个一个的字节 1B = 8bit 类似于一个一个“水滴” 一个水滴代表一个字节
	   字符流：流中是一个一个的字符   类似一个一个的“水滴” 一个水滴代表一个字符

       3.按照流的特性分类：
           节点流：磁盘流，网络中的流
	   包装流(处理流)：就是将不同的节点流封装成一种包装流，只需要面向包装流编程即可


IO流在java代码中的操作：
        
	         字节流                                                                   字符流  
    
   InputStream(字节输入流)        OutputStream(字节输出流)         Reader(字符输入流)            Writer(字符输出流)  
   FileInputStream                FileOutputStream                  FileReader                    FileWriter

   字节流：一般用于读写字节文件(图片，音视频)，实际上字节可以适用于所有的文件
            注意：字节流可以用于所有文件的复制 
	           注意点：复制前后的文件编码和类型一致即可！

   字符流： 一般用于读取文本 ，一般不要用于读取字节文件 
             注意：读取的文件的编码必须与代码所在的编码一致，那么读取出来的字符流才不会乱码 ！

            如果读取字符流的代码编码，与读取的文件编码不一致会产生乱码，怎么解决？
	        a.读取的文件的编码必须与代码所在的编码一致，那么读取出来的字符流才不会乱码 ！
		b.使用转换流 InputStreamReader：可以使用特定的编码将字节流转换成对应的编码的字符流


    作业：使用字符流进行文本的复制操作！