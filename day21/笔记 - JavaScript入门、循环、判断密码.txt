JavaScript
    JavaScript是一种编程语言，和Java没有任何亲戚关系。
    和Java完全不同：
        Java是混合型语言，源代码编译成class文件，然后再运行class文件。
        JavaScript是解析型语言，源代码在运行的时候，直接解析成机器码。

    使用JavaScript目前并额外不需要安装解析器，因为通常JavaScript在浏览器里面运行，而浏览器通常自带了解析器。


和Java的对比：
    变量
        Java是强类型的，每个变量必须有对应的数据类型，并且只能存储对应类型的数据。

            <数据类型> <变量名> [= 初始值];

        JavaScript是弱类型的，声明变量的时候不需要指定数据类型，并且一个变量可以存储任意类型的数据。

            var <变量名> [= 初始值];            

    方法
        Java的方法是非常严格的，有返回值必须有return。

            [修饰符] <返回值类型> 方法名([形参列表])
            {
                //return
            }


        JavaScript的方法非常灵活

            function 方法名([形参列表])
            {
                //随意可选的return
            }

            形参列表
                Java的形参列表，每个参数都必须有数据类型。方法需要什么参数，调用的时候必须传入类型匹配的、数量符合的实参。


                JavaScript的形参列表，只需要参数的名称即可，不需要数据类型。并且调用方法的时候，随意决定是传入参数。
                    即使方法要求传入参数，使用的时候也可以不传入；
                    即使方法没有要求传入参数，使用的时候也可以传入。


            另外一种声明方法的语法：
                var 方法名 = function( 形参列表 )
                {
                };

                从上面这个语法，可以看到，方法也是一个变量！
                方法、变量都是对象。


    Java里面程序的最基本单元是类，所有代码必须在类里面。
    JavaScript里面程序的最基本单元是语句，只要写了执行语句，就是JavaScript代码。
        比如之前计算器的时候，把一个数学表达式放到脚本引擎里面之前，得到结果。这个数学表达式就是JavaScript程序。


    运算符的区别
        Java

            String s = "5";
            int i = 10;

            // 报错
            int x = i + s;

        JavaScript

            var s = "5";
            var i = 10;

            //结果是对的
            var x = i + s;//105

            // Java里面使用Integer.parseInt 把字符串转换为int
            // JavaScript使用全局方法，实现同样的功能，而且JavaScript里面可以把int转换为int，不会报错。
            var x = i + parseInt( s ); //15

            //结果也是对的！
            var y = i - s;//5

            var z = i * s;//50
                


JavaScript直接可以在html文件里面嵌入。写代码的时候，只需要在html的任意地方嵌入<script>标签即可。
通常在head、body里面嵌入。
    head里面嵌入的，通常是引入外部的js文件
        <script type="text/javascript" src="文件的路径，通常是相对路径"/>

    body嵌入的时候，通常是改变显示的代码
        比如事件处理
        <script type='text/javascript'>
            //写任意js代码
        </script>


练习
    一、循环往控制台输出一些信息，每条信息都不同

    二、在注册的时候，判断两次输入的密码是否一致
        如果输入的密码和前面输入的密码不同，则把输入框的边框改为红色

        1.在确认密码的输入框处理 键盘输入 事件
            在按键松开以后，判断确认密码输入框的内容和密码输入框的内容是否一致

            // 元素如果有 id="password" 属性，会被下面这句话获取到该元素
            document.getElementById("password")



            onkeyup="checkPassword()"


            表示在按键松开的时候，调用 checkPassword() 方法。

            === 和 == 的区别
            !== 和 != 的区别

            多一个等号的，就是性能比较好的，不会自动进行类型转换，推荐使用。
            少一个等号的，会自动进行类型转换，不同类型也可以判断，性能比较差。

        2.如果不一致，则修改确认密码输入框的样式为error；否则修改为confirm























