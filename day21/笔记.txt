JavaScript
    JavaScript是一种编程语言，和Java没有任何亲戚关系。
    和Java完全不同：
        Java是混合型语言，源代码编译成class文件，然后再运行class文件。
        JavaScript是解析型语言，源代码在运行的时候，直接解析成机器码。

    使用JavaScript目前并额外不需要安装解析器，因为通常JavaScript在浏览器里面运行，而浏览器通常自带了解析器。


和Java的对比：
    变量
        Java是强类型的，每个变量必须有对应的数据类型，并且只能存储对应类型的数据。

            <数据类型> <变量名> [= 初始值];

        JavaScript是弱类型的，声明变量的时候不需要指定数据类型，并且一个变量可以存储任意类型的数据。

            var <变量名> [= 初始值];            

    方法
        Java的方法是非常严格的，有返回值必须有return。

            [修饰符] <返回值类型> 方法名([形参列表])
            {
                //return
            }


        JavaScript的方法非常灵活

            function 方法名([形参列表])
            {
                //随意可选的return
            }

            形参列表
                Java的形参列表，每个参数都必须有数据类型。方法需要什么参数，调用的时候必须传入类型匹配的、数量符合的实参。


                JavaScript的形参列表，只需要参数的名称即可，不需要数据类型。并且调用方法的时候，随意决定是传入参数。
                    即使方法要求传入参数，使用的时候也可以不传入；
                    即使方法没有要求传入参数，使用的时候也可以传入。


            另外一种声明方法的语法：
                var 方法名 = function( 形参列表 )
                {
                };

                从上面这个语法，可以看到，方法也是一个变量！
                方法、变量都是对象。


    Java里面程序的最基本单元是类，所有代码必须在类里面。
    JavaScript里面程序的最基本单元是语句，只要写了执行语句，就是JavaScript代码。
        比如之前计算器的时候，把一个数学表达式放到脚本引擎里面之前，得到结果。这个数学表达式就是JavaScript程序。


    运算符的区别
        Java

            String s = "5";
            int i = 10;

            // 报错
            int x = i + s;

        JavaScript

            var s = "5";
            var i = 10;

            //结果是对的
            var x = i + s;//105

            // Java里面使用Integer.parseInt 把字符串转换为int
            // JavaScript使用全局方法，实现同样的功能，而且JavaScript里面可以把int转换为int，不会报错。
            var x = i + parseInt( s ); //15

            //结果也是对的！
            var y = i - s;//5

            var z = i * s;//50
                


JavaScript直接可以在html文件里面嵌入。写代码的时候，只需要在html的任意地方嵌入<script>标签即可。
通常在head、body里面嵌入。
    head里面嵌入的，通常是引入外部的js文件
        <script type="text/javascript" src="文件的路径，通常是相对路径"/>

    body嵌入的时候，通常是改变显示的代码
        比如事件处理
        <script type='text/javascript'>
            //写任意js代码
        </script>


内置函数
    parseInt   : 全局的内置函数（方法），把参数转换为int
    parseFloat : 把参数转换成浮点
    eval       : 把字符串当做代码来执行

        evel.html

    encodeURI  : 把字符串转换成编码后的、基于ASCII的特殊字符串，用于在浏览器的地址栏把中文、特殊符号发送给服务器，编码后的字符串特点是有很多的%
        每个字节一个%。有一些符号不会编码：& ? = /
    decodeURI  : 把编码后的特殊符号、中文，转换成能够看懂的


    uri.html


内置对象
    document   : 内置对象。document表示文档，就是整个的html元素及其里面的内容。
        如果一个html文件里面有两个html元素的话，这里会出现问题：只能获取其中的一个html！

        getElementById

        write
    console    : 控制台

        log
        debug
        ...


    screen     : 屏幕
        获取屏幕的高度、宽度等信息

    window     : 窗口


DOM（文档对象模型）
    Element : 元素
        value  : 获取元素的值，通常输入框、select等才有
        textContent : 返回元素的文本内容，标签体里面的。也可以修改标签体的内容。
        innerHTML   : 返回元素的HTML内容，标签也会返回。也可以修改。


        element.html

    Attribute : 属性

    可以通过JavaScript操作DOM的方式修改整个显示的效果。第二个练习修改了显示的css样式。


对话框
    alert   : 警告
    confirm : 确认对话框，如果选择“是”、“确定”等按钮，返回true，否则返回false
    prompt  : 可以有输入框的确认对话框，如果选择“是”、“确定”等按钮，返回输入框输入的内容

    dialog.html


    这三种对话框，在没有关闭的时候都不会执行下一行代码！整个浏览器处于阻塞状态！




练习
    一、循环往控制台输出一些信息，每条信息都不同

    二、在注册的时候，判断两次输入的密码是否一致
        如果输入的密码和前面输入的密码不同，则把输入框的边框改为红色

        1.在确认密码的输入框处理 键盘输入 事件
            在按键松开以后，判断确认密码输入框的内容和密码输入框的内容是否一致

            // 元素如果有 id="password" 属性，会被下面这句话获取到该元素
            document.getElementById("password")



            onkeyup="checkPassword()"


            表示在按键松开的时候，调用 checkPassword() 方法。

            === 和 == 的区别
            !== 和 != 的区别

            多一个等号的，就是性能比较好的，不会自动进行类型转换，推荐使用。
            少一个等号的，会自动进行类型转换，不同类型也可以判断，性能比较差。

        2.如果不一致，则修改确认密码输入框的样式为error；否则修改为confirm



    飞机大战
        1.在浏览器上，增加两个容器，一个容器用来放计分信息，另外一个大的容器则是天空！
            在一个div里面放两个span。
            div居中
            大的span放左边；小的放右边，两个div高度100%

        2.先在天空里面，添加一个友机，这个飞机要通过键盘、鼠标来控制方向
            鼠标使用移动事件，飞机跟着鼠标走。
            键盘则使用aswd、←、↓、↑、→来分别控制左、下、上、又。

        3.友机需要发射子弹，单击或者j键发射子弹。

        4.需要创建一个线程来让子弹飞。不断修改子弹的y坐标。
            如果子弹飞出屏幕之外，要把子弹销毁。

            setTimeout()  :  在时间到达的时候，执行一次指定的代码。此方法会返回一个id，用于取消的时候使用。
            clearTimeout():  根据id取消定时事件。

            setInterval()  : 在指定的时间间隔里面，不断执行指定代码。此方法也会返回一个id，用于取消。
            clearInterval(): 根据id取消定时。

        5.随机在不同的x轴上面出现敌机。
            敌机按照一定的速度修改y坐标，不断往下。

        6.在线程里面，增加碰撞检测，如果子弹在敌机的范围，把敌机和子弹销毁。


        子弹和敌机，需要有不同的集合来装！



















